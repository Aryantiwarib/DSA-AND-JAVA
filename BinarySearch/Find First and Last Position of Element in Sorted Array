class Solution {
    static int search(int[] arr, int target,boolean is_first_index){
        int start=0;
        int end=arr.length-1;
        int n=-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(arr[mid]<target){
                start=mid+1;
            }else if(arr[mid]>target){
                end=mid-1;
                
            }
            else{
                if(is_first_index){
                    end=mid-1;
                    n=mid;
                }else{
                    start=mid+1;
                    n=mid;
                }
            }
        }
        return n;
    }
    public int[] searchRange(int[] nums, int target) {
        int first=search(nums,target,true);
        int second=search(nums,target,false);
        int[] ans={first,second};
        return ans;        
    }

    // LEARNING OF THIS QUESTION IS THAT WE NEED TO USE BOOLEAN TYPE IF WE HAVE TWO CONDITIONS
}
