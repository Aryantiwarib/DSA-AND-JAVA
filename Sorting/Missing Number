//////////////// Second Solution ////////////////
class Solution {
    public int missingNumber(int[] nums) {
        int n=nums.length;
    int arr[]=new int[n+1];
    for(int i=0;i<n;i++){
        arr[nums[i]]++;
    }
    for(int i=0;i<n+1;i++){
        if(arr[i]==0)
        return i;
    }
    return -1;
    }
}



//////////////// First Solution ////////////////
// class Solution {
//     static int MissingNumber(int[] arr,int target){
//         int start=0;
//         int end=arr.length-1;
//         while(start<=end){
//             int mid=start+(end-start)/2;
//             if(arr[mid]==target){
//                 return mid;
//             }
//             else if(arr[mid]>target){
//                 end=mid-1;
//             }
//             else if(arr[mid]<target){
//                 start=mid+1;
//             }
//         }
//         return -1;
//     }


    
//     static void Sort(int[] arr){
//         boolean swapped;
//         for (int i=0;i<arr.length;i++){
//             swapped= false;
//             for(int j=1;j<arr.length-i;j++){
//                 if(arr[j]<arr[j-1]){
//                     int temp=arr[j];
//                     arr[j]=arr[j-1];
//                     arr[j-1]=temp;
//                     swapped=true;
//                 }
//             }
//             if(!swapped){
//                 break;
//             }
//         }
//     }


//     public int missingNumber(int[] nums) {
//         int a=0;
//         // Sort(nums);
//         Arrays.sort(nums);
//         for(int i=0;i<=nums.length;i++){
//             int f=MissingNumber(nums,i);
//             if(f==-1){
//                 a=i;
//                 break;
//             }
//         }
//         return a;        
//     }
// }






