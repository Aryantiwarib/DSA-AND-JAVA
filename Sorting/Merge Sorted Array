// class Solution {
    
//     static void Sort(int[] arr){
//         boolean swapped;
//         for (int i=0;i<arr.length;i++){
//             swapped= false;
//             for(int j=1;j<arr.length-i;j++){
//                 if(arr[j]<arr[j-1]){
//                     int temp=arr[j];
//                     arr[j]=arr[j-1];
//                     arr[j-1]=temp;
//                     swapped=true;
//                 }
//             }
//             if(!swapped){
//                 break;
//             }
//         }
//     }


//     static void merg(int[] arr, int[] arr1) {
//         for(int i=0;i<arr1.length;i++){
//             arr[arr.length-i-1]=arr1[i];
//         }
//     }
    
//     public void merge(int[] nums1, int m, int[] nums2, int n) {
//         merg(nums1,nums2);
//         Sort(nums1);
//     }
// }



class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        for (int j = 0, i = m; j < n; j++) {
            nums1[i] = nums2[j];
            i++;
        }
        Arrays.sort(nums1);
    }
}
